{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl340

\f0\fs26 \cf0 # Update system\
sudo apt-get update\
\
# Build essentials\
sudo apt-get -y install build-essential curl git-core ruby openjdk-6-jre python-software-properties zlib1g-dev libssl-dev libreadline5-dev openssh-server libyaml-dev libcurl4-openssl-dev libxslt-dev libxml2-dev\
\
# RVM\
\pard\pardeftab720\sl440
\cf0 bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)\
\pard\pardeftab720\sl360
\cf0 echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function' >> ~/.bash_profile\cf1 \
\pard\pardeftab720\sl440
\cf0 source ~/.bash_profile\
\
# Install jruby
\f1\fs24 \
\pard\pardeftab720\sl340

\f0\fs26 \cf0 rvm install jruby-1.6.7\
rvm --default use jruby-1.6.7\
\
# Install torquebox\
gem install torquebox-server --pre --version=2.0.0.cr1\
\
# Add nginx\
add-apt-repository ppa:nginx/stable\
apt-get -y update\
apt-get -y install nginx\
sudo rm /etc/nginx/sites-enabled/default\
service nginx start\
\
# Add deployer user\
adduser deployer --ingroup admin\
su deployer\
cd\
\
# Get to know github\
ssh git@github.com\
\
###\
For Vagrant\
###\
\
# Install gems\
cd /vagrant\
bundle install\
\
# Install Mongo\
\pard\pardeftab720\sl360
\cf0 echo "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" | sudo tee -a /etc/apt/sources.list\
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10\
\pard\pardeftab720\sl320
\cf0 sudo apt-get update\
sudo apt-get -y upgrade\
sudo apt-get -y install mongodb-10gen\
\
# Link the dev nginx config file\
sudo ln -nfs /vagrant/config/nginx.development.conf /etc/nginx/sites-enabled/\{application\}\
sudo service nginx restart\
\
# add ssh\
ssh-keygen -t dsa\
eval `ssh-agent`\
ssh-add\
\
\
\
\
\
\
# STEPS for linode\
\
1. Create linode, use stack script\
2. Boot server\
3. Watch output with list\
4. From local: cat ~/.ssh/id_dsa.pub | ssh root@50.116.50.229 'cat >> /home/deployer/.ssh/authorized_keys'\
\
\
\
\
\
\
\
\
#!/bin/bash\
# \
# Installs jruby 1.6.7, Nginx, and Torquebox 2.0.0.cr1 \
#\
# <UDF name="deployer_password" Label="Deployer user password" />\
\
source <ssinclude StackScriptID=1>  # Common bash functions\
source <ssinclude StackScriptID=123>  # Awesome ubuntu utils script\
\
function log \{\
  echo "$1 `date '+%D %T'`" >> /root/log.txt\
\}\
\
log "Install essentials"\
cd /tmp\
system_update\
log "System updated"\
sudo apt-get -y install build-essential curl git-core ruby openjdk-6-jre python-software-properties zlib1g-dev libssl-dev libreadline5-dev openssh-server libyaml-dev libcurl4-openssl-dev libxslt-dev libxml2-dev\
goodstuff\
\
log "Installing RVM system-wide"\
sudo bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)\
cat >> /etc/profile <<'EOF'\
# Load RVM if it is installed,\
#  first try to load  user install\
#  then try to load root install, if user install is not there.\
if [ -s "$HOME/.rvm/scripts/rvm" ] ; then\
  . "$HOME/.rvm/scripts/rvm"\
elif [ -s "/usr/local/rvm/scripts/rvm" ] ; then\
  . "/usr/local/rvm/scripts/rvm"\
fi\
EOF\
\
source /etc/profile\
\
log "Install jruby 1.6.7"\
rvm install jruby-1.6.7\
rvm --default use jruby-1.6.7\
log "Jruby Installed"\
\
log "Updating Ruby gems"\
set_production_gemrc\
gem update --system\
\
log "Install Bundler"\
gem install bundler\
\
log "Install Torquebox"\
gem install torquebox-server --pre --version=2.0.0.cr1\
\
# Add nginx\
add-apt-repository ppa:nginx/stable\
apt-get -y update\
apt-get -y install nginx\
sudo rm /etc/nginx/sites-enabled/default\
service nginx start\
\
# Configure nginx to start automatically\
wget http://library.linode.com/web-servers/nginx/installation/reference/init-deb.sh\
cat init-deb.sh | sed 's:/opt/:/usr/local/:' > /etc/init.d/nginx\
chmod +x /etc/init.d/nginx\
/usr/sbin/update-rc.d -f nginx defaults\
log "Nginx configured to start automatically"\
\
log "Add deployer user"\
system_add_user 'deployer' $DEPLOYER_PASSWORD "users,sudo,admin"\
echo "deployer\'a0\'a0\'a0 ALL=(ALL) ALL" >> /etc/sudoers\
sudo mkdir -p /home/deployer/.ssh\
\
restartServices\
log "StackScript Finished!"\
}