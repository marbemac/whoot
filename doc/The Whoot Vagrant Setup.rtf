{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww21680\viewh20300\viewkind0
\deftab720
\pard\pardeftab720\sl340

\f0\fs26 \cf0 \cb1 # Update system\
sudo apt-get update\
\
# Build essentials\
sudo apt-get -y install build-essential curl git-core ruby openjdk-6-jre python-software-properties \cb1 zlib1g-dev\cb1  libssl-dev libreadline5-dev openssh-server libyaml-dev libcurl4-openssl-dev libxslt-dev libxml2-dev\
\
\pard\pardeftab720\sl340
\cf0 \cb1 # RVM\
\pard\pardeftab720\sl440
\cf0 \cb1 bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)\
\pard\pardeftab720\sl360
\cf0 echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && . "$HOME/.rvm/scripts/rvm" # Load RVM function' >> ~/.bash_profile\cf1 \
\pard\pardeftab720\sl440
\cf0 \cb1 source ~/.bash_profile\
\
# Install jruby
\f1\fs24 \
\pard\pardeftab720\sl340

\f0\fs26 \cf0 rvm install jruby-1.6.7\
\cb1 rvm --default use jruby-1.6.7\
\pard\pardeftab720\sl340
\cf0 \
# Install torquebox\
gem install torquebox-server --pre --version=2.0.0.cr1\
\
# Add nginx\
add-apt-repository ppa:nginx/stable\
apt-get -y update\
apt-get -y install nginx\
sudo rm /etc/nginx/sites-enabled/default\
service nginx start\
\
# Add deployer user\
adduser deployer --ingroup admin\
su deployer\
cd\
\
# Get to know github\
ssh git@github.com\
\
###\
For Vagrant\
###\
\
# Install gems\
cd /vagrant\
bundle install\
\
# Install Mongo\
\pard\pardeftab720\sl360
\cf0 echo "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen" | sudo tee -a /etc/apt/sources.list\
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10\
\pard\pardeftab720\sl320
\cf0 sudo apt-get update\
sudo apt-get -y upgrade\
sudo apt-get -y install mongodb-10gen\
\
# Link the dev nginx config file\
sudo ln -nfs /vagrant/config/nginx.development.conf /etc/nginx/sites-enabled/\{application\}\
sudo service nginx restart\
\
\
\
\
\
\
\
\
# STEPS for linode\
\
1. Create linode, use stack script\
2. Boot server\
3. Watch output with list\
}